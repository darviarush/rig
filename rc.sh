#!/bin/bash
#
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ç–æ—Ä –∑–∞–¥–∞—á
#
# –í—ã–ø–æ–ª–Ω–∏—Ç–µ:
#
# $ . ./rc.sh startup
#
# –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á –≤ bash

export LANG=ru_RU.UTF-8
export LANGUAGE=ru_RU:ru
export EDITOR=mcedit
export PATH=$PATH:/usr/sbin
export PS1='\[\033[01;32m\][\u@\h\[\033[01;37m\] \W\[\033[31m\]$(branch_prompt )\[\033[01;32m\]]\$\[\033[00m\] '

if [ "$1" == startup ]; then

    for i in ~/.bashrc; do
        if [ -e $i ]; then
            perl -i -0pe 's/$/\n\nexport RIG_RC=${\`pwd`}. \$RIG_RC\/rc.sh/ if !/^export[ \t]+RIG_RC=/m' $i
            echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ $i"
        fi
    done
fi

alias ls='ls --color'

# fn - –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å rig/rc.sh –∏ –≤–Ω–µ—Å—Ç–∏ –µ–≥–æ –≤ bash
## mkdir -p etc/sublime-text-3/; rsync -ravh ~/.config/sublime-text-3/Packages/User/ etc/sublime-text-3/;
alias fn='pushd $RIG_RC; mcedit rc.sh; . rc.sh; push fn; popd'

# help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π
help() {
    grep -e "^#" $RIG_RC/rc.sh | tail -n +2 | sed "s/^#[ \\t]\?//" 
    echo
}


# run code - –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–¥ bash –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ
run() {
    echo "$*"
    eval "$*"
    local c="$?"
    if [ "$c" != 0 ]; then echo "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: $c. –í—ã—Ö–æ–¥–∏–º"; fi
}

# locallib - —É–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø–∞–∫–µ—Ç–æ–≤ perl
alias locallib='cpanm --local-lib=~/.local/lib/perl5 local::lib && eval $(perl -I ~/.local/lib/perl5/lib/perl5/ -Mlocal::lib)'

# git_diff - –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π —Å –Ω–∏–º–∏
git_diff() {
    local m=`git status -s`
    if [ "$m" != "" ]; then
        git status -s
        PS3="–í–∞—à –≤—ã–±–æ—Ä:"
        select i in –ö–æ–º–∏—Ç–∏–º –†–µ—Å–µ—Ç–∏–º diff stash –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –û—Ç–º–µ–Ω–∞
        do
            case $i in
                –ö–æ–º–∏—Ç–∏–º) read -p "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " a; commit "$a"; break;;
                –†–µ—Å–µ—Ç–∏–º) run git reset --hard HEAD; break;;
                diff) git diff;;
                stash) run git stash; break;;
                –ü—Ä–æ–ø—É—Å–∫–∞–µ–º) echo "–ü—Ä–æ–ø—É—â–µ–Ω–æ"; break;;
                –û—Ç–º–µ–Ω–∞) return 1;;
            esac
        done
    fi
    return 0
}


# desc - –ø–µ—á–∞—Ç–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –±—Ä–∞–Ω—á–∞
alias desc='git config branch.`branch`.description'

# sta - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–π git-—Å—Ç–∞—Ç—É—Å
alias sta="git status -s"

# sta1 - –ø–æ–∫–∞–∑–∞—Ç—å git-—Å—Ç–∞—Ç—É—Å
alias sta1="git status"

# reset - —É–¥–∞–ª–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö
alias reset='git reset --hard HEAD'

# gl - –ª–æ–≥ –≥–∏—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ —Ñ–∞–π–ª–æ–≤
alias gl='git log --name-only --graph'


# new branch - —Å–æ–∑–¥–∞—ë—Ç –≤–µ—Ç–∫—É
new() {
    if ! git_diff; then return; fi
    run git checkout master
    run git pull origin master --no-edit
    local b=`echo "$1" | awk '{print $1}'`
    if [ "$b" == "" ]; then echo "–ù–µ—Ç –±—Ä–∞–Ω—á–∞!"; return; fi
    local s="`echo "$1" | sed -r 's/^\S+\s*//'`"
    git config --global merge.branchdesc true
    git config branch.$b.description "$s"

    run git checkout -b $b
    git merge --log
    run git push origin $b
}

# branch - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

# branch_prompt - –ø–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ç–∫—É –∫—Ä–∞—Å–Ω–æ–π –∏ —Å –æ—Ç—Å—Ç—É–ø–æ–º –≤ –ø—Ä–æ–±–µ–ª, –µ—Å–ª–∏ –µ—Å—Ç—å
branch_prompt() {
    local status=$?
    local b=`branch`
    if [ "$b" != "" ]; then echo -n " $b"; fi
    if [ "$status" != 0 ]; then echo -n " üò°"; fi
    #echo " üò±üòàüôÄüòæ"
}

# c0 [branch] - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–µ—Ç–∫—É. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ - –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π. –ê–ª–∏–∞—Å —Å0 - c —Ä—É—Å—Å–∫–∞—è
alias —Å0=c0
c0() {
    local branch
    branch="$1"
    if [ "$branch" == "" ]; then branch=$C0; fi

    if git_diff; then
        C0=`branch`
        git checkout $branch
        echo $branch `desc`
    fi
}

# bdiff [branch] - —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –±—Ä–∞–Ω—á–µ–π. –í—ã–ø–æ–ª–Ω–∏—Ç–µ installrig –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ kompare
bdiff() {
    git diff master...${1:-`branch`} | kompare -
}

# commit - –∫–æ–º–∏—Ç–∏—Ç. –ï—Å–ª–∏ –Ω–µ—á–µ–≥–æ –∫–æ–º–∏—Ç–∏—Ç—å - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
commit() {
    if [ "`sta`" != "" ]; then
        sta
        if [ "$PRECOMMIT" != "" ]; then . $PRECOMMIT; fi
        run git add .
        local x
        if [ "$1" == "" ]; then x="`desc`"; else x="$1"; fi
        x="`echo \"$x\" | sed \"s/'/\\\\'/g\"`"
        run "git commit -am '`branch` $x'" || return $?
    fi
}

# upd - –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ç–∫—É —Å –º–∞—Å—Ç–µ—Ä–∞
upd() {
    run "git merge origin/${1:-master} --no-edit --no-ff"
}

# push [comment] - –¥–µ–ª–∞–µ—Ç –∫–æ–º–∏—Ç —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
push() {
    local branch
    if [ -x "act" ]; then ./act meta || return 1; fi
    branch=`branch`
    if [ "$1" == 1 ]; then commit "`desc`"; else commit "$1"; fi || return $?
    run "git pull origin $branch --no-edit || git merge --no-ff --no-edit origin/$branch" || return $?
    run "git push origin $branch" || return $?
}

# pull - –ø—É–ª–ª —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
pull() {
    branch=`branch`

    if [ "`sta`" != "" ]; then
        sta
        echo
        echo "–í–Ω–∞—á–∞–ª–µ –∑–∞–ø—É—à—Ç–µ."
        return 1
    fi

    run "git pull origin $branch --no-edit || git merge --no-ff --no-edit origin/$branch"
    if [ -x "act" ]; then ./act meta || return 1; fi
}

# merge - –º–µ—Ä–∂–∏—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É —Å –º–∞—Å—Ç–µ—Ä–æ–º –∏ —É–¥–∞–ª—è–µ—Ç –µ—ë
merge() {
    local b="`branch`"
    echo "=== merge $b ==="
    push "${1:-`desc`}"
    run "c0 master"
    run "git merge --no-ff --no-edit $b"
    run "push '–°–ª–∏—è–Ω–∏–µ $b \"`desc`\"'"
    if [ "$1" == "1" ]; then
        echo "=== –£–¥–∞–ª–µ–Ω–∏–µ $b ==="
        run "git push origin :$b"
        run "git branch -D $b"
    fi
}

# indev - –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É –≤ –≤–µ—Ç–∫—É dev
indev() {
    local x=dev
    c0 $x                                     \
    && run "git pull origin $x --no-edit"     \
    && run "git merge --no-edit --no-ff $C0"  \
    && run "git push origin $x"               \
    && c0
}

# release [desc] - –î–µ–ª–∞–µ—Ç—Å—è –Ω–∞ –ø—Ä–æ–¥–µ. pull –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–≥
release() {
    local ver="`date '+%F %T'`"
    commit "–†–µ–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ $ver"
    if [ "$1" == "" ]; then
        git tag -a "$ver"
    else
        git tag -a "$ver" -m "$1"
    fi
    git push origin --tags
}

# release2 version-message - —Å—Ç–∞–≤–∏—Ç —Ç–µ–≥ –∏ –º–µ–Ω—è–µ—Ç –≤–µ—Ä—Å–∏—é –≤ README.md
release2() {
    if [ "`branch`" != master ]; then echo "–í–Ω–∞—á–∞–ª–µ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ master"; return; fi

    ver=`echo "$1" | awk '{print $1}'`
    if [ "$ver" == "" ]; then echo "–ù–µ—Ç –≤–µ—Ä—Å–∏–∏!"; return; fi
    desc="`echo "$1" | sed -r 's/^\S+\s*//'`"
    if [ "$desc" == "" ]; then echo "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è!"; return; fi

    perl -i -np -e 's/^(#+[ \t]+VERSION\s*)\S+/$1$ver/m' README.md
    return

    commit "–†–µ–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ $ver"

    git tag -a "$ver" -m "$desc"
    git push origin --tags
}

# version - –≤–µ—Ä—Å–∏—è –∏–∑ README.md —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
version() {
    perl -e '$_=join "", <>; print("$1\n") if /^#+[ \t]+VERSION\s+(\S+)/m' README.md
}

# github name - –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å github –º–æ–π –ø—Ä–æ–µ–∫—Ç
github() {
    git clone git@github.com:darviarush/$1.git
}

# install_pip - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pip —Å –∏–Ω–µ—Ç–∞
alias install_pip='curl https://bootstrap.pypa.io/get-pip.py > /tmp/get-pip.py && python3 /tmp/get-pip.py'


# cda - cd to astrobook
alias cda='cd ~/__/astrobook'

# cdl - cd to @lib
alias cdl='cd ~/__/@lib'

# cdla - cd to perl-aion
alias cdla='cd ~/__/@lib/perl-aion'

# cde - cd to erswitcher
alias cde='cd ~/__/erswitcher'

# cdn - cd to ninja
alias cdn='cd ~/__/ninja'

# cdnx - cd to mx-basic
alias cdmx='cd ~/__/mx-basic'

# cdth - cd to ethereal-theory
alias cdth='cd ~/__/ethereal-theory'

# cdfr - cd to rubin-forms
alias cdrf='cd /mnt/ext/__/rubin-forms'

# cds - cd to golang-perl-storable
alias cds='cd ~/__/golang-perl-storable'

# cdt - cd to test directory
alias cdt='cd ~/__1/'

# cdr - cd to restoclub directory
alias cdr='cd /home/Project/restoclub-2022'

# cdcrm - cd to crm directory
alias cdcrm='cd /home/Project/crm-2020'

# cdga - cd to ga directory
alias cdga='cd /home/Project/google.analytics.microservice'

# cdmb - cd to monitoring_bot directory
alias cdmb='cd /home/Project/monitoring_bot'

# cdapi - cd to api directory
alias cdapi='cd /home/Project/api.restoclub.ru'

# cdv3 - cd to node v3
alias cdv3='cd /home/Project/node-ssr-v3'

# npp - –∑–∞–ø—É—Å—Ç–∏—Ç—å notepad++ –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
alias npp='~/.wine/drive_c/Program\ Files/Notepad++/notepad++.exe -multiInst &> /dev/null &'

# brig - —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —è—Ä–∫–æ—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞
brig() {
    local b
    for i in /sys/class/backlight/*
    do
        echo $i
        echo "–Ø—Ä–∫–æ—Å—Ç—å 0-`cat $i/max_brightness`: `cat $i/brightness`"
        echo -n "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é: "

        read b
        sudo sh -c "echo $b > $i/brightness"
    done
}

# ports - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—ã —á–µ—Ä–µ–∑ ss
alias ports='sudo ss -tlpn'

# ports1 - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—ã —á–µ—Ä–µ–∑ netstat
alias ports1='sudo netstat -tlpn'

# vg - –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ ~/_vg –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å vagrant
vg() {
    pushd ~/_vg
    vagrant $*
    popd
}

# mk snippet name [1] - –∫–æ–ø–∏—Ä—É–µ—Ç —Å–Ω–∏–ø–ø–µ—Ç —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏ –≤ —Ç–µ–∫—É—â–∏–π –∫–∞—Ç–∞–ª–æ–≥. [1] - –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–¥–µ–ª–∞—Ç—å flat
alias mk='$RIG_RC/bin/mk.sh'

# py_test - —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞–∫–µ—Ç –ø–∏—Ç–æ–Ω –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
py_test() {
    pypkg=`basename $(pwd )`
    pypkg=`echo "$pypkg" | sed 's/-/_/g' | sed 's/python_//g'`
    rm -fr htmlcov
    PYTHONPATH=. coverage run --branch --source=$pypkg -m pytest tests/ && coverage report -m && coverage html && \
        if [ "$1" == "open" ]; then xdg-open htmlcov/index.html; fi
}

# py_upload - –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–∏—Ç–æ–Ω –∫–∞–∫ –ø–∞–∫–µ—Ç –≤ pypi
alias py_upload='py_test && push dist && $RIG_RC/bin/pypi.org.upload.sh'

# py_upload_only - –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–∏—Ç–æ–Ω –∫–∞–∫ –ø–∞–∫–µ—Ç –≤ pypi –Ω–µ —Ç–µ—Å—Ç–∏—Ä—É—è –µ–≥–æ –∏ –Ω–µ –ø—É—à–∞
alias py_upload_only='$RIG_RC/bin/pypi.org.upload.sh'

# py_init - –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–Ω—Å–æ–ª—å –Ω–∞ —Ä–∞–±–æ—Ç—É —Å pyenv
py_init() {
    export PATH="~/.pyenv/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
}

# cov - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ perl-–ø—Ä–æ–µ–∫—Ç–æ–≤ —Å cover
cov() {
    cover -delete
    #PERL5OPT="$PERL5OPT -MDevel::Cover" prove -Ilib
    yath test -j4 --cover && cover -report html_basic || return 1
    if [ "$1" == "-O" ]; then xdg-open cover_db/coverage.html
    elif [ "$1" == "-o" ]; then opera cover_db/coverage.html
    fi
}

# pmuninstall - —É–¥–∞–ª—è–µ—Ç perl-–º–æ–¥—É–ª—å
alias pmuninstall='sudo cpanm --uninstall'

# portal - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ ssh –¥–ª—è –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞
alias portal='ssh -p 6022 '

# defopt - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
defopt() {
    xdg-settings set default-web-browser opera.desktop
}

# gitconf - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç git
gitconf() {
    git config --global pull.rebase false   # rebase
    git config --global pull.ff only       # fast-forward only
}

# installrig -         –∏–Ω—Å—Ç–∞–ª–ª–∏—Ä—É–µ—Ç —Å–∞–º–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ
installrig() {
    pamac install aspell hspell libvoikko kompare
}


# drm container - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
drm() {
    docker stop -t 0 $1
    docker rm $1
}


#### –°–∏–º—Ñ–æ–Ω–∏—è

# cmd - –ö–æ–º–∞–Ω–¥–∞ symphony –≤ –¥–æ–∫–µ—Ä–µ
cmd() {
    if [ -e api ]; then
        docker-compose run --rm api-php-cli bin/console $*
    else
        make localhost-cmd l="run --rm service-php-cli app/console $*"
    fi
}

# cmdx - –ö–æ–º–∞–Ω–¥–∞ –≤ –¥–æ–∫–µ—Ä–µ
cmdx() {
    if [ -e api -o -e ../api ]; then
        docker-compose run --rm api-php-cli $*
    else
        make localhost-cmd l="run --rm service-php-cli $*"
    fi
}

# ccache - –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞
alias ccache='make localhost-cmd l="run --rm service-php-cli app/console restoclub:core:clear-cache"'

# migsta - –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π –¥–æ–∫—Ç—Ä–∏–Ω—ã
alias migsta='make localhost-cmd l="run --rm service-php-cli app/console doctrine:migrations:status --show-versions"'

# miggen - –ù–æ–≤–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–æ–∫—Ç—Ä–∏–Ω—ã
alias miggen='make localhost-cmd l="run --rm service-php-cli app/console doctrine:migrations:generate"'

# migdiff - –û—Ç–ª–∏—á–∏—è –≤ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–æ–∫—Ç—Ä–∏–Ω—ã
alias migdiff='make localhost-cmd l="run --rm service-php-cli app/console doctrine:migrations:diff"'

# migup1 - –ù–∞–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–æ–∫—Ç—Ä–∏–Ω—ã –ø–æ –æ–¥–Ω–æ–π
alias migup1='make localhost-cmd l="run --rm service-php-cli app/console doctrine:migrations:migrate --up"'

# migx version [--up|--down]  - –ù–∞–∫–∞—Ç–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é –¥–æ–∫—Ç—Ä–∏–Ω—ã (20180601193057)
migx() {
    make localhost-cmd l="run --rm service-php-cli app/console doctrine:migrations:execute $*"
}
# make dc-cmd l="run --rm service-php-cli-1 app/console doctrine:migrations:execute $*"

# migup - –ù–∞–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–æ–∫—Ç—Ä–∏–Ω—ã
alias migup='make localhost-cmd l="run --rm service-php-cli app/console doctrine:migrations:migrate"'

# migdown - –û—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–æ–∫—Ç—Ä–∏–Ω—ã
alias migdown='make localhost-cmd l="run --rm service-php-cli app/console doctrine:migrations:migrate prev"'

# migtab table - –°–æ–∑–¥–∞—Ç—å entity –ø–æ —Ç–∞–±–ª–∏—Ü–µ
migtab() {
    make localhost-cmd l="run --rm service-php-cli app/console doctrine:make:entity"
}

# mkmig - —Å–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –æ—Ç–∫—Ä—ã—Ç—å –µ—ë –≤ phpstorm-–µ
mkmig() {
    local path=/home/Project/restoclub-2022/migrations/`date +%Y`/`date +%m`
    mkdir -p $path
    pushd $path
    mk mig _ 1
    popd

    /usr/bin/env phpstorm --line 23 "${path}/Version$(date +%Y%m%d%H%M%S).php"
}

# mkbundle Name - —Å–æ–∑–¥–∞—Ç—å –±–∞–Ω–¥–ª –∏ –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ –≤ phpstorm-–µ
mkbundle() {
    local path=/home/Project/restoclub-2022/src
    mkdir -p $path
    pushd $path
    mk bundle ${1,,}
    mv ${1,,}/* ${1}Bundle
    rmdir ${1,,}
    popd

    /usr/bin/env phpstorm --line 23 "${path}/${1}Bundle/Entity/$1.php"
}

# mkentity bundle entity - —Å–æ–∑–¥–∞—Ç—å —ç–Ω—Ç–∏—Ç–∏ –≤ –±–∞–Ω–¥–ª–µ –∏ –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ –≤ phpstorm-–µ
mkentity() {
    local path=/home/Project/restoclub-2022/src/${1}Bundle

    if [ ! -e $path ]; then echo "–ù–µ—Ç $path"; return 0; fi
    if [ "" == "$2" ]; then echo "–ù–µ—Ç 2-–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ - –∏–º–µ–Ω–∏ Entity"; return 0; fi

    path=$path/Entity
    mkdir -p $path

    pushd $path
    mk entity $2
    popd

    /usr/bin/env phpstorm --line 23 "${path}/$2.php"
}


# front - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å —Ñ—Ä–æ–Ω—Ç
front() {
    make localhost-node-cli l="bash -c 'cd front; ./node_modules/.bin/gulp buildDev'"
}

# frontjs - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ js
frontjs() {
    make localhost-node-cli l="bash -c 'cd front; ./node_modules/.bin/gulp buildJsDev'"
}

# frontnpm - –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å npm i
frontnpm() {
    make localhost-node-cli l="bash -c 'cd front; npm i'"
}


# startfix - –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞–≥
startfix() {
    sudo chown dart:dart -R /tmp/openapi web/uploads &> /dev/null
    rm -fr web/uploads
    mkdir -p web/uploads
    chmod 777 web/uploads

    mkdir -p /tmp/cache/nginx
    chmod 777 /tmp/cache/nginx

    mkdir -p /tmp/log/nginx
    echo > /tmp/log/nginx/dev-cache_pages.log
    chmod 777 /tmp/log/nginx
    chmod 777 /tmp/log/nginx/dev-cache_pages.log
}

# starter - –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç
starter() {
    cdcrm
    make dc-up-d
    cdr
    #startfix
    make sf-def-parameters env="localhost"
    make localhost-up l=-d
    xdg-open https://restoclub.localhost
}

# pushdev [–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π] - push –∏ indev
pushdev() {
    push "$1"
    indev
}

# routers - –≤—ã–±–æ—Ä–∫–∞ –ø–æ —Ä–æ—É—Ç–∞–º symphony
alias routers='cmd debug:route | grep '

# ga - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ openapi
alias ga='cmd rc:api:gen-docs'

# task - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –∑–∞–¥–∞—á—É —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
alias task='xdg-open https://restoclub.myjetbrains.com/youtrack/issue/`branch`'

# mksymfeature category/name - —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç symphony –∏ –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ –≤ phpstorm-–µ
mksymfeature() {
    local file=`basename $1`
    local dir=`dirname $1`

    local path=/home/Project/restoclub-2022/tests/symfony/$dir
    mkdir -p $path
    pushd $path
    mk symfeature $file
    popd

    /usr/bin/env phpstorm --line 4 "${path}/$file.feature"
}

# mkapifeature –ø—É—Ç—å/–∏–º—è - —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç api –∏ –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ –≤ phpstorm-–µ
mkapifeature() {
    local file=`basename $1`
    local dir=`dirname $1`

    local path=/home/Project/restoclub-2022/tests/api/$dir
    mkdir -p $path
    pushd $path
    mk apifeature $file
    popd

    /usr/bin/env phpstorm --line 4 "${path}/$file.feature"
}

# fromtest - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É —Å —Ç–µ—Å—Ç–æ–≤–æ–π
alias fromtest='make sf-def-parameters env=localhost && ccache'

# features - –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ—Å—Ç—ã
features() {
    chmod -R 0777 ./bin/
    make sf-clear-cache env="test"

    make testing-clear
    make testing-create-dirs
    #make testing-create-db # (–µ—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –Ω–µ—Ç testing-create-db)
    make testing-migrate-db

    make sf-def-parameters env=localhost
}

# feature path - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç
feature() {
    make testing-codecept-sf-path path=$1.feature
    make sf-def-parameters env=localhost
}

# symtst - –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç—ã –¥–ª—è —Ä–µ–ª–∏–∑–∞
symtst() {
    features

    make testing-php-lint # (–ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
    make testing-forgotten-debug-check # (–ø—Ä–æ–≤–µ—Ä—è)
    make testing-codecept-sf # (–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–∏–º—Ñ–æ–Ω–∏ —Ç–µ—Å—Ç–æ–≤)

    make sf-def-parameters env=localhost
    rm -fr var/cache/*
}

# pr - —Å–æ–∑–¥–∞—ë—Ç pull-request –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤–µ—Ç–∫–∏
pr() {
    opera "https://bitbucket.org/restonet/restoclub-2019/pull-requests/new?source=$(branch )&t=1"
}
