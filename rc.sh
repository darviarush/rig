#!/bin/bash
#
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ç–æ—Ä –∑–∞–¥–∞—á
#
# –í—ã–ø–æ–ª–Ω–∏—Ç–µ:
#
# $ . ./rc.sh startup
#
# –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á –≤ bash

#@category rc

export LANG=ru_RU.UTF-8
export LANGUAGE=ru_RU:ru
export EDITOR=mcedit
export PATH=$PATH:/usr/sbin:`shopt -s nullglob; echo /ext/__/@lib/*/script | sed 's/ /:/g'`
export PERL5LIB=lib:`shopt -s nullglob; echo $PERL5LIB /ext/__/@lib/*/lib | sed 's/ /:/g'`
export PS1='\[\033[01;32m\][\u@\h\[\033[01;37m\] \W\[\033[31m\]$(branch_prompt )\[\033[01;32m\]]\$\[\033[00m\] '


if [ "$1" == startup ]; then

    for i in ~/.bashrc; do
        if [ -e $i ]; then
            perl -i -0pe 's/$/\n\nexport RIG_RC=${\`pwd`}. \$RIG_RC\/rc.sh/ if !/^export[ \t]+RIG_RC=/m' $i
            echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ $i"
        fi
    done
fi

alias ls='ls --color'

# fn - –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å rig/rc.sh –∏ –≤–Ω–µ—Å—Ç–∏ –µ–≥–æ –≤ bash
## mkdir -p etc/sublime-text-3/; rsync -ravh ~/.config/sublime-text-3/Packages/User/ etc/sublime-text-3/;
alias fn='pushd $RIG_RC; mcedit rc.sh; . rc.sh; push fn; popd'

# -help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π
-help() {
    if perl -V > /dev/null; then
        perl  -e '
        use Term::ANSIColor qw/colored :constants/;
        while(<>) {
            print(colored("„Äå$1„Äç", "bold red"), "\n"), next if /#\@category\s+(.*)/;

            next unless /^# /;

            /^#\s+(\S+)(?:\s+((?:[^-]|\S-)+?))?\s+-\s+(.*)/ or do { print s/^# //r, "\n"; next; };

            print colored(sprintf("   %15s", $1), "bold green"), do {
                my $x = sprintf("  %-20s  ", $2 // " ");
                $x =~ s/[\[\]]/ $& =~ m!\[! ? BRIGHT_BLACK . $& : $& . BRIGHT_YELLOW /ge;
                $x = BRIGHT_YELLOW . $x . RESET;
            },
            colored($3, "bold blue"),
            "\n";
        }
        ' $RIG_RC/rc.sh
    else
        grep -e "^#" $RIG_RC/rc.sh | tail -n +2 | sed "s/^#[ \\t]\?//"
    fi
    echo
}


# run code - –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–¥ bash –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ
run() {
    echo "$*"
    eval "$*"
    local c="$?"
    if [ "$c" != 0 ]; then echo "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: $c. –í—ã—Ö–æ–¥–∏–º"; fi
}


#@category git

# gitconf - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç git
gitconf() {
    git config --global pull.rebase false   # rebase
    git config --global pull.ff only       # fast-forward only
}

# git_diff - –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π —Å –Ω–∏–º–∏
git_diff() {
    local m=`git status -s`
    if [ "$m" != "" ]; then
        git status -s
        PS3="–í–∞—à –≤—ã–±–æ—Ä:"
        select i in –ö–æ–º–∏—Ç–∏–º –†–µ—Å–µ—Ç–∏–º diff stash –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –û—Ç–º–µ–Ω–∞
        do
            case $i in
                –ö–æ–º–∏—Ç–∏–º) read -p "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " a; commit "$a"; break;;
                –†–µ—Å–µ—Ç–∏–º) run git reset --hard HEAD; break;;
                diff) git diff;;
                stash) run git stash; break;;
                –ü—Ä–æ–ø—É—Å–∫–∞–µ–º) echo "–ü—Ä–æ–ø—É—â–µ–Ω–æ"; break;;
                –û—Ç–º–µ–Ω–∞) return 1;;
            esac
        done
    fi
    return 0
}

# desc [desc] - –ø–µ—á–∞—Ç–∞–µ—Ç/—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –±—Ä–∞–Ω—á–∞
alias desc='git config branch.`branch`.description'

# branches - —Å–ø–∏—Å–æ–∫ –≤–µ—Ç–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
alias branches='for i in `git branch --format="%(refname:short)"`; do printf "%-10s %s\n" "$i" "`git config branch.$i.description`"; done'

# sta - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–π git-—Å—Ç–∞—Ç—É—Å
alias sta="git status -s"

# sta1 - –ø–æ–∫–∞–∑–∞—Ç—å git-—Å—Ç–∞—Ç—É—Å
alias sta1="git status"

# reset - —É–¥–∞–ª–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö
alias reset='git reset --hard HEAD'

# gl - –ª–æ–≥ –≥–∏—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ —Ñ–∞–π–ª–æ–≤
alias gl='git log --name-only --graph'

# gl1 - –ª–æ–≥ –≥–∏—Ç–∞ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
alias gl1='git log --name-only --graph --oneline'


# gitgrep [options] regexp - –ø–æ–∏—Å–∫ —Ç–µ—Å—Ç–∞ –≤–æ –≤—Å–µ—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö
gitgrep() {
    git grep $* $(git rev-list --all)
}

# githist file - –∏—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
githist() {
    git log -p -- "$1"
}

# bdiff [branch] - —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –±—Ä–∞–Ω—á–µ–π. –í—ã–ø–æ–ª–Ω–∏—Ç–µ installrig –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ kompare
bdiff() {
    git diff ${GIT_NEW_FROM:-master}...${1:-`branch`} | kompare -
}

# mkpatch - —Å–æ–∑–¥–∞—ë—Ç –ø–∞—Ç—á –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–ª–∏—á–∏–π —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏ –æ—Ç master (–∏–ª–∏ $GIT_NEW_FROM)
mkpatch() {
    local $master=${GIT_NEW_FROM:-master}
    local f=/tmp/patch-`branch`-$master.patch
    git format-patch $master --stdout > $f
    pushd `pwd`
    cdkr
    git am $f
    popd
}

# pushinit - –∫–æ–º–∏—Ç–∏—Ç –∏ –ø—É—à–∏—Ç –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑
alias pushinit='git add . && git commit -am init && git push --set-upstream origin master'


# new branch - —Å–æ–∑–¥–∞—ë—Ç –≤–µ—Ç–∫—É
new() {
    if ! git_diff; then return; fi
    run git checkout ${GIT_NEW_FROM:-master}
    upd
    local b=`echo "$1" | awk '{print $1}'`
    if [ "$b" == "" ]; then echo "–ù–µ—Ç –±—Ä–∞–Ω—á–∞!"; return; fi
    local s="`echo "$1" | sed -r 's/^\S+\s*//'`"
    git config --global merge.branchdesc true
    git config branch.$b.description "$s"

    run git checkout -b $b
    git merge --log
    run git push origin $b
}

# branch - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
branch() { # git branch --show-current
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

# branch_prompt - –ø–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ç–∫—É –∫—Ä–∞—Å–Ω–æ–π –∏ —Å –æ—Ç—Å—Ç—É–ø–æ–º –≤ –ø—Ä–æ–±–µ–ª, –µ—Å–ª–∏ –µ—Å—Ç—å
branch_prompt() {
    local status=$?
    local b=`branch`
    if [ "$b" != "" ]; then echo -n " $b"; fi
    if [ "$status" != 0 ]; then echo -n " üò°"; fi
    #echo " üò±üòàüôÄüòæ"
}

# c0 [branch] - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–µ—Ç–∫—É. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ - –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π. –ê–ª–∏–∞—Å —Å0 - c —Ä—É—Å—Å–∫–∞—è
alias —Å0=c0
c0() {
    local branch
    branch="$1"
    if [ "$branch" == "" ]; then branch=$C0; fi

    if git_diff; then
        C0=`branch`
        git checkout $branch
        echo $branch `desc`
    fi
}


# commit - –∫–æ–º–∏—Ç–∏—Ç. –ï—Å–ª–∏ –Ω–µ—á–µ–≥–æ –∫–æ–º–∏—Ç–∏—Ç—å - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
commit() {
    if [ "`sta`" != "" ]; then
        sta
        if [ "$PRECOMMIT" != "" ]; then . $PRECOMMIT; fi
        run git add .
        local x
        if [ "$1" == "" ]; then x="`desc`"; else x="$1"; fi
        x="`echo \"$x\" | sed \"s/'/\\\\'/g\"`"
        run "git commit -am '`branch` $x'" || return $?
    fi
}

# upd - –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ç–∫—É —Å –º–∞—Å—Ç–µ—Ä–∞
upd() {
    local master=${GIT_NEW_FROM:-${1:-master}}
    run "git pull --no-edit origin $master || git merge --no-edit origin/$master"
}

# push [comment] - –¥–µ–ª–∞–µ—Ç –∫–æ–º–∏—Ç —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
push() {
    local branch
    if [ -x "act" ]; then ./act meta || return 1; fi
    branch=`branch`
    if [ "$1" == 1 ]; then commit "`desc`"; else commit "$1"; fi || return $?
    run "git pull origin $branch --no-edit || git merge --no-ff --no-edit origin/$branch" || return $?
    run "git push origin $branch" || return $?
}

# pull - –ø—É–ª–ª —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
pull() {
    branch=`branch`

    if [ "`sta`" != "" ]; then
        sta
        echo
        echo "–í–Ω–∞—á–∞–ª–µ –∑–∞–ø—É—à—Ç–µ."
        return 1
    fi

    run "git pull origin $branch --no-edit || git merge --no-ff --no-edit origin/$branch"
    if [ -x "act" ]; then ./act meta || return 1; fi
}

# merge - –º–µ—Ä–∂–∏—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É —Å –º–∞—Å—Ç–µ—Ä–æ–º –∏ —É–¥–∞–ª—è–µ—Ç –µ—ë
merge() {
    local b="`branch`"
    echo "=== merge $b ==="
    push "${1:-`desc`}"
    run "c0 master"
    run "git merge --no-ff --no-edit $b"
    run "push '–°–ª–∏—è–Ω–∏–µ $b \"`desc`\"'"
    if [ "$1" == "1" ]; then
        echo "=== –£–¥–∞–ª–µ–Ω–∏–µ $b ==="
        run "git push origin :$b"
        run "git branch -D $b"
    fi
}

# indev - –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É –≤ –≤–µ—Ç–∫—É dev
indev() {
    local x=dev
    c0 $x                                     \
    && run "git pull origin $x --no-edit"     \
    && run "git merge --no-edit --no-ff $C0"  \
    && run "git push origin $x"               \
    && c0
}

# mkdiff - —Å–æ–∑–¥–∞—ë—Ç –¥–∏—Ñ—Ñ —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –≤ –¥—Ä—É–≥–æ–π –ø—Ä–æ–µ–∫—Ç
alias mkdiff='c00=`branch`; git checkout ${GIT_NEW_FROM:-master} && pull && git checkout $c00 && git diff ${GIT_NEW_FROM:-master} > /tmp/1.diff'

# apply - –ø—Ä–∏–º–µ–Ω—è–µ—Ç –ø–∞—Ç—á —Å–æ–∑–¥–∞–Ω–Ω—ã–π mkdiff
alias apply='git apply --reject /tmp/1.diff'

# vidiff - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç diff —Å–æ–∑–¥–∞–Ω–Ω—ã–π mkdiff
alias vidiff='mcedit /tmp/1.diff'

# mr - —Å–æ–∑–¥–∞—ë—Ç –ú–† –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
mr() {
    local x=`git remote -v | perl -e '<> =~ /\@([^:]+):([^.]+)/; print "https://$1/$2/-/merge_requests/new"'`

    opera "$x?merge_request[assignee_ids][]=1036&merge_request[reviewer_ids][]=108&merge_request[source_branch]=`branch`&merge_request[target_branch]=develop&merge_request[force_remove_source_branch]=1&merge_request[squash]=1&merge_request[title]=`branch`+`desc`" &> /dev/null
}

# lr - –∏—â–µ—Ç –≤—Å–µ –ú–† –ø–æ —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–µ
lr() {
    local x=`git remote -v | perl -e '<> =~ /\@([^:]+):([^.]+)/; print "https://$1/$2/-/merge_requests"'`

    opera "$x?scope=all&state=all&search=`branch`" &> /dev/null
}


#@category –ü–µ—Ä–µ—Ö–æ–¥—ã

# cda - cd to astrobook
alias cda='cd /ext/__/astrobook'

# cdy - cd to le-yoga
alias cdy='cd /ext/__/le-yoga'

# cdman - cd to liveman
alias cdman='cd /ext/__/@lib/perl-liveman'

# cdl - cd to @lib
alias cdl='cd /ext/__/@lib'

# cdla - cd to perl-aion
alias cdla='cd /ext/__/@lib/perl-aion'

# cdlact - cd to perl-aion-action
alias cdlact='cd /ext/__/@lib/perl-aion-action'

# cdlc - cd to perl-aion-carp
alias 'cdlc=cd /ext/__/@lib/perl-aion-carp'

# cdlf - cd to perl-aion-format
alias 'cdlf=cd /ext/__/@lib/perl-aion-format'

# cdlfs - cd to perl-aion-fs
alias 'cdlfs=cd /ext/__/@lib/perl-aion-fs'

# cdlq - cd to perl-aion-query
alias 'cdlq=cd /ext/__/@lib/perl-aion-query'

# cdlr - cd to perl-aion-run
alias 'cdlr=cd /ext/__/@lib/perl-aion-run'

# cdls - cd to perl-aion-sige
alias 'cdls=cd /ext/__/@lib/perl-aion-sige'

# cdlsp - cd to perl-aion-spirit
alias 'cdlsp=cd /ext/__/@lib/perl-aion-spirit'

# cdlsu - cd to perl-aion-surf
alias 'cdlsu=cd /ext/__/@lib/perl-aion-surf'

# cdlt - cd to perl-aion-telemetry
alias 'cdlt=cd /ext/__/@lib/perl-aion-telemetry'

# cdlv - cd to perl-aion-view
alias 'cdlv=cd /ext/__/@lib/perl-aion-view'

# cde - cd to erswitcher
alias cde='cd /ext/__/erswitcher'

# cdn - cd to ninja
alias cdn='cd /ext/__/ninja'

# cdnx - cd to mx-basic
alias cdmx='cd /ext/__/mx-basic'

# cdth - cd to ethereal-theory
alias cdth='cd /ext/__/ethereal-theory'

# cdfr - cd to rubin-forms
alias cdrf='cd /ext/__/rubin-forms'

# cdgos - cd to golang-perl-storable
alias cdgos='cd /ext/__/golang-perl-storable'

# cdsc - cd to test directory
alias cdsc='cd /ext/__/@script'

# cdis - cd to job dir
alias cdis='cd /ext/__/@is'

# cdrig - cd to rig
alias cdrig='cd $RIG_RC'

# cdp - cd to portalis
alias cdp='cd /ext/__/@lib/perl-portalis'

#@category –£—Ç–∏–ª–∏—Ç—ã

# npp - –∑–∞–ø—É—Å—Ç–∏—Ç—å notepad++ –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
alias npp='~/.wine/drive_c/Program\ Files/Notepad++/notepad++.exe -multiInst &> /dev/null &'

# brig - —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —è—Ä–∫–æ—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞
brig() {
    local b
    for i in /sys/class/backlight/*
    do
        echo $i
        echo "–Ø—Ä–∫–æ—Å—Ç—å 0-`cat $i/max_brightness`: `cat $i/brightness`"
        echo -n "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é: "

        read b
        sudo sh -c "echo $b > $i/brightness"
    done
}

# snd - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞
alias snd='systemctl --user restart pipewire'

# packagecheck - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∞–∫–µ—Ç—ã –Ω–∞ –æ—à–∏–±–∫–∏
alias packagecheck='sudo paccheck --files --file-properties --db-files --quiet --sha256sum'

# sysreinstall - –ü–µ—Ä–µ–∏–Ω—Å—Ç–∞–ª–ª–∏—Ç—å –≤—Å–µ –ø–∞–∫–µ—Ç—ã
alias sysreinstall='pacman -Qqn | pacman -S -'

# ports - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—ã —á–µ—Ä–µ–∑ ss
alias ports='sudo ss -tlpn'

# ports1 - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—ã —á–µ—Ä–µ–∑ netstat
alias ports1='sudo netstat -tlpn'

# scpp u@h:/file file - scp —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
scpp() {
    rsync -r -v --progress -e ssh "$1" "$2"
}

# vg - –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ ~/_vg –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å vagrant
vg() {
    pushd ~/_vg
    vagrant $*
    popd
}

# portal - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ ssh –¥–ª—è –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞
alias portal='ssh -p 6022 '

# defopt - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
defopt() {
    xdg-settings set default-web-browser opera.desktop
}

# installrig - –∏–Ω—Å—Ç–∞–ª–ª–∏—Ä—É–µ—Ç —Å–∞–º–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ
installrig() {
    pamac install aspell hspell libvoikko kompare
}


# drm container - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
drm() {
    docker stop -t 0 $1
    docker rm $1
}

# bashing - –ø–µ—Ä–µ—á–∏—Ç–∞—Ç—å .bashrc –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
alias bashing='. ~/.bashrc'

# bashed - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .bashrc –∏ –ø–µ—Ä–µ—á–∏—Ç–∞—Ç—å
alias bashed='mcedit ~/.bashrc; . ~/.bashrc'


#@category –§–∞–π–ª–æ–≤—ã–µ —Å–Ω–∏–ø–ø–µ—Ç—ã

# mk snippet name [1] - –∫–æ–ø–∏—Ä—É–µ—Ç —Å–Ω–∏–ø–ø–µ—Ç —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏ –≤ —Ç–µ–∫—É—â–∏–π –∫–∞—Ç–∞–ª–æ–≥. [1] - –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–¥–µ–ª–∞—Ç—å flat
alias mk='$RIG_RC/bin/mk.sh'

# mkdist pkg - —Å–æ–∑–¥–∞—Ç—å –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ perl
mkdist() {
    local pkg=$1
    local name=`echo -n $1 | sed 's/::/-/g'`
    local path=lib/`echo -n $1 | sed 's/::/\//g'`
    local dir=perl-${name,,}

    local wf=.github/workflows
    mkdir -p $dir/$wf || return
    cp $RIG_RC/snippet/perl-dist/$wf/test.yml $dir/$wf/ || return

    local mdpath=$path.md
    local pmpath=$path.pm
    local var=`echo -n $1 | sed 's/::/_/g'`

    for i in $RIG_RC/snippet/perl-dist/* $RIG_RC/snippet/perl-dist/.gitignore; do
	echo $i `basename $i`
	year=`date +%Y` var=${var,,} dir=$dir pkg=$pkg name=$name mdpath=$mdpath pmpath=$pmpath perl -np -e 's/\{\{(\w+)\}\}/$ENV{$1}/g' $i >  $dir/`basename $i`
    done

    mkdir -p $dir/`dirname $path` || return
    cp $dir/README.md $dir/$mdpath
    mv $dir/MOD.pm $dir/$pmpath

    cd $dir
    git init
    git remote add origin git@github.com:darviarush/$dir.git

    opera "https://github.com/new?name=$dir&description=$pkg%20is%20" &> /dev/null
}

#@category –†–µ–ª–∏–∑—ã

# release - —Ä–µ–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ perl-dist
release() {
    if [ "$PERL_LOCAL_LIB_ROOT" == "" ]; then
        cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
    fi
    liveman -fc && minil release
}

# release1 [desc] - –î–µ–ª–∞–µ—Ç—Å—è –Ω–∞ –ø—Ä–æ–¥–µ. pull –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–≥
release1() {
    local ver="`date '+%F %T'`"
    commit "–†–µ–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ $ver"
    if [ "$1" == "" ]; then
        git tag -a "$ver"
    else
        git tag -a "$ver" -m "$1"
    fi
    git push origin --tags
}

# release2 version-message - —Å—Ç–∞–≤–∏—Ç —Ç–µ–≥ –∏ –º–µ–Ω—è–µ—Ç –≤–µ—Ä—Å–∏—é –≤ README.md
release2() {
    if [ "`branch`" != master ]; then echo "–í–Ω–∞—á–∞–ª–µ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ master"; return; fi

    ver=`echo "$1" | awk '{print $1}'`
    if [ "$ver" == "" ]; then echo "–ù–µ—Ç –≤–µ—Ä—Å–∏–∏!"; return; fi
    desc="`echo "$1" | sed -r 's/^\S+\s*//'`"
    if [ "$desc" == "" ]; then echo "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è!"; return; fi

    perl -i -np -e 's/^(#+[ \t]+VERSION\s*)\S+/$1$ver/m' README.md
    return

    commit "–†–µ–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ $ver"

    git tag -a "$ver" -m "$desc"
    git push origin --tags
}

# version - –≤–µ—Ä—Å–∏—è –∏–∑ README.md —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
version() {
    perl -e '$_=join "", <>; print("$1\n") if /^#+[ \t]+VERSION\s+(\S+)/m' README.md
}

# github [name] - –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å github –º–æ–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ github
github() {
    if [ "$1" == "" ]; then
        opera `git remote get-url origin | sed 's/^git@//' | sed 's/.git$//' | sed 's/:/\//'`
    else
        git clone git@github.com:darviarush/$1.git
    fi
}

#@category python

# install_pip - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pip —Å –∏–Ω–µ—Ç–∞
alias install_pip='curl https://bootstrap.pypa.io/get-pip.py > /tmp/get-pip.py && python3 /tmp/get-pip.py'

# py_test - —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞–∫–µ—Ç –ø–∏—Ç–æ–Ω –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
py_test() {
    pypkg=`basename $(pwd )`
    pypkg=`echo "$pypkg" | sed 's/-/_/g' | sed 's/python_//g'`
    rm -fr htmlcov
    PYTHONPATH=. coverage run --branch --source=$pypkg -m pytest tests/ && coverage report -m && coverage html && \
        if [ "$1" == "open" ]; then xdg-open htmlcov/index.html; fi
}

# py_upload - –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–∏—Ç–æ–Ω –∫–∞–∫ –ø–∞–∫–µ—Ç –≤ pypi
alias py_upload='py_test && push dist && $RIG_RC/bin/pypi.org.upload.sh'

# py_upload_only - –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–∏—Ç–æ–Ω –∫–∞–∫ –ø–∞–∫–µ—Ç –≤ pypi –Ω–µ —Ç–µ—Å—Ç–∏—Ä—É—è –µ–≥–æ –∏ –Ω–µ –ø—É—à–∞
alias py_upload_only='$RIG_RC/bin/pypi.org.upload.sh'

# py_init - –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–Ω—Å–æ–ª—å –Ω–∞ —Ä–∞–±–æ—Ç—É —Å pyenv
py_init() {
    export PATH="~/.pyenv/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
}

#@category perl

# cov - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ perl-–ø—Ä–æ–µ–∫—Ç–æ–≤ —Å cover
cov() {
    cover -delete
    #PERL5OPT="$PERL5OPT -MDevel::Cover" prove -Ilib
    yath test -j4 --cover && cover -report html_basic || return 1
    if [ "$1" == "-O" ]; then xdg-open cover_db/coverage.html
    elif [ "$1" == "-o" ]; then opera cover_db/coverage.html
    fi
}


# pmuninstall - —É–¥–∞–ª—è–µ—Ç perl-–º–æ–¥—É–ª—å
alias pmuninstall='sudo cpanm --uninstall'

# locallib - —É–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø–∞–∫–µ—Ç–æ–≤ perl
alias locallib='cpanm --local-lib=~/.local/lib/perl5 local::lib && eval $(perl -I ~/.local/lib/perl5/lib/perl5/ -Mlocal::lib)'

# go editor *.pm [subname|hasname|varname] - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ perl-–º–æ–¥—É–ª—å
go() {
    $RIG_RC/bin/go.pl "$1" "$2" "$3" > /tmp/__RIG__MOD || return
    eval `cat /tmp/__RIG__MOD`
}

# gocd module - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∫–∞—Ç–∞–ª–æ–≥ –º–æ–¥—É–ª—è
alias gocd='go cd'

# gomc module [subname|hasname|varname] - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤ mcedit perl-–º–æ–¥—É–ª—å
alias gomc='go mc'

# gokt module [subname|hasname|varname] - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤ kate perl-–º–æ–¥—É–ª—å
alias gokt='go kate'

# goco module [subname|hasname|varname] - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤ codium perl-–º–æ–¥—É–ª—å
alias goco='go codium'

# gonp module [subname|hasname|varname] - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤ notepad++ perl-–º–æ–¥—É–ª—å
alias gonp='go npp'

#@category php

# phprename [root] - –∑–∞–º–µ–Ω—è–µ—Ç –≤ src –≤—Å–µ –Ω–µ–π–º—Å–ø–µ–π—Å—ã –∏ –∫–ª–∞—Å—Å—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—É—Ç—è–º –∏ –∏–º–µ–Ω–∞–º —Ñ–∞–π–ª–æ–≤ *.php
alias phprename='$RIG_RC/bin/phprename.pl'

## phpsortprop files... - —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ—É–Ω–∫—Ü–∏–π –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ —Å–∏–≥–Ω–∞—Ç—É—Ä –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö –∏–ª–∏ –∫–∞—Ç–∞–ª–æ–≥–∞—Ö
#alias phpsortprop='$RIG_RC/bin/phpsortprop.pl'

#@category symfony

alias _sym_conf='if [ -f ./docker/docker-compose-dev.yml ]; then echo ./docker/docker-compose-dev.yml; else echo ./docker-compose.yml; fi'

# sym symfonycommand [args...] - –∑–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É symphony –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
alias sym='docker-compose -f `_sym_conf` exec php bin/console'

# sym1 command [args...] - –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–æ–º–∞–Ω–¥—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ php
alias sym1='docker-compose -f `_sym_conf` exec php'

# sym2 container command [args...]  - –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–æ–º–∞–Ω–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
alias sym2='docker-compose -f `_sym_conf` exec'

# symf –º–∞—Å–∫–∞ - –ø–æ–∏—Å–∫ –≤ –∫–æ–º–∞–Ω–¥–∞—Ö —Å–∏–º—Ñ–æ–Ω–∏
alias symf='sym list | grep'

# rou –º–∞—Å–∫–∞ - —Å–ø–∏—Å–æ–∫ —Ä–æ—É—Ç–µ—Ä–æ–≤
alias rou='sym debug:router --show-controllers | grep'

# migsta - —Å–ø–∏—Å–æ–∫ –º–∏–≥—Ä–∞—Ü–∏–π
alias migs='if [ -f ./docker/docker-compose-dev.yml ]; then ../migs; else sym doctrine:migrations:list; fi'

# mig - –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é. –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º --down ‚Äì –æ—Ç–º–µ–Ω–∏—Ç—å
mig123() {
    if [ -f ./docker/docker-compose-dev.yml ]; then
        sym doctrine:migrations:execute $*
    else
	echo "sym doctrine:migrations:execute \"DoctrineMigrations\Version$1\" $2"
        sym doctrine:migrations:execute "DoctrineMigrations\Version$1" $2
    fi
}

alias mig='mig123'

# mkmig - —Å–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –∏–∑ –∫–æ–¥–∞
alias mkmig='sym doctrine:migrations:diff > /dev/null'

# emptymig - —Å–æ–∑–¥–∞—Ç—å –ø—É—Å—Ç—É—é –º–∏–≥—Ä–∞—Ü–∏—é
alias emptymig='sym doctrine:migrations:generate'

# mkmig1 - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é
mkmig1() {
    mkent
    local tables="$( sta | grep .orm.yml | xargs -I {} basename {} .orm.yml | perl -pe '$_=lcfirst; s/[A-Z]/ q{_} . lc $& /ge' | paste -sd '|')"

    #echo "--$tables--"

    sym doctrine:migrations:diff > /dev/null
    for f in $(sta | grep -P '\?\?.*/Version\d+\.php' | awk '{print $2}' ); do
        basename $f .php | sed 's/Version//g'
        perl -i -ne 'if( /->addSql/ and !/'$tables'/ ) {} else {print}' $f
    done
}

# mkent - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö entity
mkent() {
    for i in $( sta | grep .orm.yml | xargs -I {} basename {} .orm.yml ); do
        echo genent $i
        local path="src/AppBundle/Entity/$i.php"
        if [ ! -f "$path" ]; then
            echo "mk $path"
            cat <<END > $path
<?php

namespace AppBundle\Entity;

/**
 * $i
 */
class $i
{
}
END
        fi
    done

    for i in $( sta | grep .orm.yml | xargs -I {} basename {} .orm.yml ); do
        echo gen $i
        sym doctrine:generate:entities AppBundle:$i
    done
}

